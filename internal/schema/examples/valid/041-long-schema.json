{
  "version": 1,
  "types": {
    "User": {
      "type": "object",
      "description": "Represents a user.",
      "fields": {
        "email": {
          "type": "string",
          "description": "The email of the user.",
          "rules": {
            "email": {}
          }
        },
        "fullName": {
          "type": "string",
          "description": "Full name of user",
          "rules": {
            "minLen": {
              "value": 3
            }
          }
        },
        "gender": {
          "type": "string",
          "optional": true,
          "description": "The gender of the user, male, female or other.",
          "rules": {
            "enum": {
              "values": ["male", "female", "other"]
            }
          }
        },
        "settings": {
          "type": "object",
          "description": "User settings",
          "optional": true,
          "fields": {
            "notifications": {
              "type": "boolean",
              "description": "Whether the user wants to receive notifications."
            },
            "emailNotifications": {
              "type": "boolean",
              "description": "Whether the user wants to receive email notifications."
            }
          }
        },
        "followers": {
          "type": "array",
          "description": "The followers of the user.",
          "arrayType": {
            "type": "array",
            "description": "The followers of the user.",
            "arrayType": {
              "type": "object",
              "fields": {
                "userId": {
                  "type": "string",
                  "description": "The user ID of the follower."
                },
                "createdAt": {
                  "type": "string",
                  "description": "The date and time the follower was created."
                }
              }
            }
          },
          "optional": true
        }
      }
    },
    "Product": {
      "type": "object",
      "description": "Represents a product.",
      "fields": {
        "productId": {
          "type": "string",
          "description": "The unique identifier of the product."
        },
        "name": {
          "type": "string",
          "description": "The name of the product."
        },
        "price": {
          "type": "float",
          "description": "The price of the product."
        },
        "category": {
          "type": "string",
          "description": "The category of the product."
        },
        "stock": {
          "type": "int",
          "description": "The stock quantity of the product."
        }
      }
    },
    "Order": {
      "type": "object",
      "description": "Represents an order.",
      "fields": {
        "orderId": {
          "type": "string",
          "description": "The unique identifier of the order."
        },
        "userId": {
          "type": "string",
          "description": "The user ID who placed the order."
        },
        "products": {
          "type": "array",
          "description": "The list of products in the order.",
          "arrayType": {
            "type": "Product"
          }
        },
        "totalAmount": {
          "type": "float",
          "description": "The total amount of the order."
        },
        "orderDate": {
          "type": "string",
          "description": "The date and time the order was placed."
        }
      }
    },
    "Address": {
      "type": "object",
      "description": "Represents an address.",
      "fields": {
        "addressId": {
          "type": "string",
          "description": "The unique identifier of the address."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the address."
        },
        "street": {
          "type": "string",
          "description": "The street address."
        },
        "city": {
          "type": "string",
          "description": "The city."
        },
        "state": {
          "type": "string",
          "description": "The state."
        },
        "zipCode": {
          "type": "string",
          "description": "The zip code."
        },
        "country": {
          "type": "string",
          "description": "The country."
        }
      }
    },
    "Payment": {
      "type": "object",
      "description": "Represents a payment.",
      "fields": {
        "paymentId": {
          "type": "string",
          "description": "The unique identifier of the payment."
        },
        "orderId": {
          "type": "string",
          "description": "The order ID associated with the payment."
        },
        "amount": {
          "type": "float",
          "description": "The amount paid."
        },
        "paymentMethod": {
          "type": "string",
          "description": "The payment method used."
        },
        "paymentDate": {
          "type": "string",
          "description": "The date and time the payment was made."
        }
      }
    },
    "Review": {
      "type": "object",
      "description": "Represents a review.",
      "fields": {
        "reviewId": {
          "type": "string",
          "description": "The unique identifier of the review."
        },
        "userId": {
          "type": "string",
          "description": "The user ID who wrote the review."
        },
        "productId": {
          "type": "string",
          "description": "The product ID being reviewed."
        },
        "rating": {
          "type": "int",
          "description": "The rating given to the product."
        },
        "comment": {
          "type": "string",
          "description": "The comment left in the review."
        },
        "reviewDate": {
          "type": "string",
          "description": "The date and time the review was written."
        }
      }
    },
    "Category": {
      "type": "object",
      "description": "Represents a category.",
      "fields": {
        "categoryId": {
          "type": "string",
          "description": "The unique identifier of the category."
        },
        "name": {
          "type": "string",
          "description": "The name of the category."
        },
        "description": {
          "type": "string",
          "description": "The description of the category."
        }
      }
    },
    "Subscription": {
      "type": "object",
      "description": "Represents a subscription.",
      "fields": {
        "subscriptionId": {
          "type": "string",
          "description": "The unique identifier of the subscription."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the subscription."
        },
        "plan": {
          "type": "string",
          "description": "The subscription plan."
        },
        "startDate": {
          "type": "string",
          "description": "The start date of the subscription."
        },
        "endDate": {
          "type": "string",
          "description": "The end date of the subscription."
        }
      }
    },
    "Notification": {
      "type": "object",
      "description": "Represents a notification.",
      "fields": {
        "notificationId": {
          "type": "string",
          "description": "The unique identifier of the notification."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the notification."
        },
        "message": {
          "type": "string",
          "description": "The message content of the notification."
        },
        "timestamp": {
          "type": "string",
          "description": "The date and time the notification was sent."
        }
      }
    },
    "Message": {
      "type": "object",
      "description": "Represents a message.",
      "fields": {
        "messageId": {
          "type": "string",
          "description": "The unique identifier of the message."
        },
        "senderId": {
          "type": "string",
          "description": "The user ID of the sender."
        },
        "receiverId": {
          "type": "string",
          "description": "The user ID of the receiver."
        },
        "content": {
          "type": "string",
          "description": "The content of the message."
        },
        "timestamp": {
          "type": "string",
          "description": "The date and time the message was sent."
        }
      }
    },
    "Event": {
      "type": "object",
      "description": "Represents an event.",
      "fields": {
        "eventId": {
          "type": "string",
          "description": "The unique identifier of the event."
        },
        "name": {
          "type": "string",
          "description": "The name of the event."
        },
        "description": {
          "type": "string",
          "description": "The description of the event."
        },
        "date": {
          "type": "string",
          "description": "The date and time of the event."
        },
        "location": {
          "type": "string",
          "description": "The location of the event."
        }
      }
    },
    "Task": {
      "type": "object",
      "description": "Represents a task.",
      "fields": {
        "taskId": {
          "type": "string",
          "description": "The unique identifier of the task."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the task."
        },
        "title": {
          "type": "string",
          "description": "The title of the task."
        },
        "description": {
          "type": "string",
          "description": "The description of the task."
        },
        "dueDate": {
          "type": "string",
          "description": "The due date of the task."
        },
        "status": {
          "type": "string",
          "description": "The status of the task."
        }
      }
    },
    "Project": {
      "type": "object",
      "description": "Represents a project.",
      "fields": {
        "projectId": {
          "type": "string",
          "description": "The unique identifier of the project."
        },
        "name": {
          "type": "string",
          "description": "The name of the project."
        },
        "description": {
          "type": "string",
          "description": "The description of the project."
        },
        "startDate": {
          "type": "string",
          "description": "The start date of the project."
        },
        "endDate": {
          "type": "string",
          "description": "The end date of the project."
        },
        "tasks": {
          "type": "array",
          "description": "The list of tasks in the project.",
          "arrayType": {
            "type": "Task"
          }
        }
      }
    },
    "Invoice": {
      "type": "object",
      "description": "Represents an invoice.",
      "fields": {
        "invoiceId": {
          "type": "string",
          "description": "The unique identifier of the invoice."
        },
        "orderId": {
          "type": "string",
          "description": "The order ID associated with the invoice."
        },
        "amount": {
          "type": "float",
          "description": "The amount of the invoice."
        },
        "issueDate": {
          "type": "string",
          "description": "The date the invoice was issued."
        },
        "dueDate": {
          "type": "string",
          "description": "The due date of the invoice."
        }
      }
    },
    "Coupon": {
      "type": "object",
      "description": "Represents a coupon.",
      "fields": {
        "couponId": {
          "type": "string",
          "description": "The unique identifier of the coupon."
        },
        "code": {
          "type": "string",
          "description": "The coupon code."
        },
        "discount": {
          "type": "float",
          "description": "The discount amount or percentage."
        },
        "expirationDate": {
          "type": "string",
          "description": "The expiration date of the coupon."
        }
      }
    },
    "Shipment": {
      "type": "object",
      "description": "Represents a shipment.",
      "fields": {
        "shipmentId": {
          "type": "string",
          "description": "The unique identifier of the shipment."
        },
        "orderId": {
          "type": "string",
          "description": "The order ID associated with the shipment."
        },
        "trackingNumber": {
          "type": "string",
          "description": "The tracking number of the shipment."
        },
        "shippingDate": {
          "type": "string",
          "description": "The date the shipment was sent."
        },
        "deliveryDate": {
          "type": "string",
          "description": "The estimated delivery date of the shipment."
        }
      }
    },
    "Cart": {
      "type": "object",
      "description": "Represents a shopping cart.",
      "fields": {
        "cartId": {
          "type": "string",
          "description": "The unique identifier of the cart."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the cart."
        },
        "items": {
          "type": "array",
          "description": "The list of items in the cart.",
          "arrayType": {
            "type": "Product"
          }
        },
        "totalAmount": {
          "type": "float",
          "description": "The total amount of the cart."
        }
      }
    },
    "Wishlist": {
      "type": "object",
      "description": "Represents a wishlist.",
      "fields": {
        "wishlistId": {
          "type": "string",
          "description": "The unique identifier of the wishlist."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the wishlist."
        },
        "items": {
          "type": "array",
          "description": "The list of items in the wishlist.",
          "arrayType": {
            "type": "Product"
          }
        }
      }
    },
    "Promotion": {
      "type": "object",
      "description": "Represents a promotion.",
      "fields": {
        "promotionId": {
          "type": "string",
          "description": "The unique identifier of the promotion."
        },
        "name": {
          "type": "string",
          "description": "The name of the promotion."
        },
        "description": {
          "type": "string",
          "description": "The description of the promotion."
        },
        "discount": {
          "type": "float",
          "description": "The discount amount or percentage."
        },
        "startDate": {
          "type": "string",
          "description": "The start date of the promotion."
        },
        "endDate": {
          "type": "string",
          "description": "The end date of the promotion."
        }
      }
    },
    "Feedback": {
      "type": "object",
      "description": "Represents feedback.",
      "fields": {
        "feedbackId": {
          "type": "string",
          "description": "The unique identifier of the feedback."
        },
        "userId": {
          "type": "string",
          "description": "The user ID who provided the feedback."
        },
        "rating": {
          "type": "int",
          "description": "The rating given in the feedback."
        },
        "comment": {
          "type": "string",
          "description": "The comment left in the feedback."
        },
        "feedbackDate": {
          "type": "string",
          "description": "The date and time the feedback was provided."
        }
      }
    },
    "Ticket": {
      "type": "object",
      "description": "Represents a support ticket.",
      "fields": {
        "ticketId": {
          "type": "string",
          "description": "The unique identifier of the ticket."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the ticket."
        },
        "subject": {
          "type": "string",
          "description": "The subject of the ticket."
        },
        "description": {
          "type": "string",
          "description": "The description of the ticket."
        },
        "status": {
          "type": "string",
          "description": "The status of the ticket."
        },
        "createdAt": {
          "type": "string",
          "description": "The date and time the ticket was created."
        }
      }
    },
    "Comment": {
      "type": "object",
      "description": "Represents a comment.",
      "fields": {
        "commentId": {
          "type": "string",
          "description": "The unique identifier of the comment."
        },
        "userId": {
          "type": "string",
          "description": "The user ID who made the comment."
        },
        "postId": {
          "type": "string",
          "description": "The post ID associated with the comment."
        },
        "content": {
          "type": "string",
          "description": "The content of the comment."
        },
        "timestamp": {
          "type": "string",
          "description": "The date and time the comment was made."
        }
      }
    },
    "Post": {
      "type": "object",
      "description": "Represents a post.",
      "fields": {
        "postId": {
          "type": "string",
          "description": "The unique identifier of the post."
        },
        "userId": {
          "type": "string",
          "description": "The user ID who created the post."
        },
        "title": {
          "type": "string",
          "description": "The title of the post."
        },
        "content": {
          "type": "string",
          "description": "The content of the post."
        },
        "createdAt": {
          "type": "string",
          "description": "The date and time the post was created."
        },
        "comments": {
          "type": "array",
          "description": "The list of comments on the post.",
          "arrayType": {
            "type": "Comment"
          }
        }
      }
    },
    "Profile": {
      "type": "object",
      "description": "Represents a user profile.",
      "fields": {
        "profileId": {
          "type": "string",
          "description": "The unique identifier of the profile."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the profile."
        },
        "bio": {
          "type": "string",
          "description": "The bio of the user."
        },
        "profilePicture": {
          "type": "string",
          "description": "The URL of the profile picture."
        },
        "socialLinks": {
          "type": "array",
          "description": "The list of social media links.",
          "arrayType": {
            "type": "string"
          }
        }
      }
    },
    "Membership": {
      "type": "object",
      "description": "Represents a membership.",
      "fields": {
        "membershipId": {
          "type": "string",
          "description": "The unique identifier of the membership."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the membership."
        },
        "plan": {
          "type": "string",
          "description": "The membership plan."
        },
        "startDate": {
          "type": "string",
          "description": "The start date of the membership."
        },
        "endDate": {
          "type": "string",
          "description": "The end date of the membership."
        }
      }
    },
    "Transaction": {
      "type": "object",
      "description": "Represents a transaction.",
      "fields": {
        "transactionId": {
          "type": "string",
          "description": "The unique identifier of the transaction."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the transaction."
        },
        "amount": {
          "type": "float",
          "description": "The amount of the transaction."
        },
        "type": {
          "type": "string",
          "description": "The type of the transaction (e.g., credit, debit)."
        },
        "timestamp": {
          "type": "string",
          "description": "The date and time the transaction was made."
        }
      }
    },
    "Activity": {
      "type": "object",
      "description": "Represents an activity.",
      "fields": {
        "activityId": {
          "type": "string",
          "description": "The unique identifier of the activity."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the activity."
        },
        "type": {
          "type": "string",
          "description": "The type of the activity (e.g., login, logout)."
        },
        "timestamp": {
          "type": "string",
          "description": "The date and time the activity occurred."
        }
      }
    },
    "Session": {
      "type": "object",
      "description": "Represents a session.",
      "fields": {
        "sessionId": {
          "type": "string",
          "description": "The unique identifier of the session."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the session."
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the session."
        },
        "endTime": {
          "type": "string",
          "description": "The end time of the session."
        }
      }
    },
    "Role": {
      "type": "object",
      "description": "Represents a role.",
      "fields": {
        "roleId": {
          "type": "string",
          "description": "The unique identifier of the role."
        },
        "name": {
          "type": "string",
          "description": "The name of the role."
        },
        "permissions": {
          "type": "array",
          "description": "The list of permissions associated with the role.",
          "arrayType": {
            "type": "string"
          }
        }
      }
    },
    "Permission": {
      "type": "object",
      "description": "Represents a permission.",
      "fields": {
        "permissionId": {
          "type": "string",
          "description": "The unique identifier of the permission."
        },
        "name": {
          "type": "string",
          "description": "The name of the permission."
        },
        "description": {
          "type": "string",
          "description": "The description of the permission."
        }
      }
    },
    "Group": {
      "type": "object",
      "description": "Represents a group.",
      "fields": {
        "groupId": {
          "type": "string",
          "description": "The unique identifier of the group."
        },
        "name": {
          "type": "string",
          "description": "The name of the group."
        },
        "members": {
          "type": "array",
          "description": "The list of members in the group.",
          "arrayType": {
            "type": "User"
          }
        }
      }
    },
    "Device": {
      "type": "object",
      "description": "Represents a device.",
      "fields": {
        "deviceId": {
          "type": "string",
          "description": "The unique identifier of the device."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the device."
        },
        "type": {
          "type": "string",
          "description": "The type of the device (e.g., mobile, desktop)."
        },
        "lastLogin": {
          "type": "string",
          "description": "The date and time of the last login from the device."
        }
      }
    },
    "Log": {
      "type": "object",
      "description": "Represents a log entry.",
      "fields": {
        "logId": {
          "type": "string",
          "description": "The unique identifier of the log entry."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the log entry."
        },
        "message": {
          "type": "string",
          "description": "The log message."
        },
        "timestamp": {
          "type": "string",
          "description": "The date and time the log entry was created."
        }
      }
    },
    "Audit": {
      "type": "object",
      "description": "Represents an audit entry.",
      "fields": {
        "auditId": {
          "type": "string",
          "description": "The unique identifier of the audit entry."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the audit entry."
        },
        "action": {
          "type": "string",
          "description": "The action performed."
        },
        "timestamp": {
          "type": "string",
          "description": "The date and time the action was performed."
        }
      }
    },
    "Metric": {
      "type": "object",
      "description": "Represents a metric.",
      "fields": {
        "metricId": {
          "type": "string",
          "description": "The unique identifier of the metric."
        },
        "name": {
          "type": "string",
          "description": "The name of the metric."
        },
        "value": {
          "type": "float",
          "description": "The value of the metric."
        },
        "timestamp": {
          "type": "string",
          "description": "The date and time the metric was recorded."
        }
      }
    },
    "Alert": {
      "type": "object",
      "description": "Represents an alert.",
      "fields": {
        "alertId": {
          "type": "string",
          "description": "The unique identifier of the alert."
        },
        "message": {
          "type": "string",
          "description": "The alert message."
        },
        "severity": {
          "type": "string",
          "description": "The severity of the alert (e.g., low, medium, high)."
        },
        "timestamp": {
          "type": "string",
          "description": "The date and time the alert was triggered."
        }
      }
    },
    "Report": {
      "type": "object",
      "description": "Represents a report.",
      "fields": {
        "reportId": {
          "type": "string",
          "description": "The unique identifier of the report."
        },
        "name": {
          "type": "string",
          "description": "The name of the report."
        },
        "content": {
          "type": "string",
          "description": "The content of the report."
        },
        "generatedAt": {
          "type": "string",
          "description": "The date and time the report was generated."
        }
      }
    },
    "Integration": {
      "type": "object",
      "description": "Represents an integration.",
      "fields": {
        "integrationId": {
          "type": "string",
          "description": "The unique identifier of the integration."
        },
        "name": {
          "type": "string",
          "description": "The name of the integration."
        },
        "status": {
          "type": "string",
          "description": "The status of the integration (e.g., active, inactive)."
        },
        "config": {
          "type": "object",
          "description": "The configuration of the integration.",
          "fields": {
            "apiKey": {
              "type": "string",
              "description": "The API key for the integration."
            },
            "endpoint": {
              "type": "string",
              "description": "The endpoint URL for the integration."
            }
          }
        }
      }
    },
    "Webhook": {
      "type": "object",
      "description": "Represents a webhook.",
      "fields": {
        "webhookId": {
          "type": "string",
          "description": "The unique identifier of the webhook."
        },
        "url": {
          "type": "string",
          "description": "The URL of the webhook."
        },
        "event": {
          "type": "string",
          "description": "The event that triggers the webhook."
        },
        "createdAt": {
          "type": "string",
          "description": "The date and time the webhook was created."
        }
      }
    },
    "APIKey": {
      "type": "object",
      "description": "Represents an API key.",
      "fields": {
        "apiKeyId": {
          "type": "string",
          "description": "The unique identifier of the API key."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the API key."
        },
        "key": {
          "type": "string",
          "description": "The API key value."
        },
        "expiresAt": {
          "type": "string",
          "description": "The expiration date of the API key."
        }
      }
    },
    "Token": {
      "type": "object",
      "description": "Represents a token.",
      "fields": {
        "tokenId": {
          "type": "string",
          "description": "The unique identifier of the token."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the token."
        },
        "token": {
          "type": "string",
          "description": "The token value."
        },
        "expiresAt": {
          "type": "string",
          "description": "The expiration date of the token."
        }
      }
    },
    "SubscriptionPlan": {
      "type": "object",
      "description": "Represents a subscription plan.",
      "fields": {
        "planId": {
          "type": "string",
          "description": "The unique identifier of the subscription plan."
        },
        "name": {
          "type": "string",
          "description": "The name of the subscription plan."
        },
        "price": {
          "type": "float",
          "description": "The price of the subscription plan."
        },
        "features": {
          "type": "array",
          "description": "The list of features included in the plan.",
          "arrayType": {
            "type": "string"
          }
        }
      }
    },
    "DiscountCode": {
      "type": "object",
      "description": "Represents a discount code.",
      "fields": {
        "discountCodeId": {
          "type": "string",
          "description": "The unique identifier of the discount code."
        },
        "code": {
          "type": "string",
          "description": "The discount code."
        },
        "discount": {
          "type": "float",
          "description": "The discount amount or percentage."
        },
        "expiresAt": {
          "type": "string",
          "description": "The expiration date of the discount code."
        }
      }
    },
    "ShippingMethod": {
      "type": "object",
      "description": "Represents a shipping method.",
      "fields": {
        "shippingMethodId": {
          "type": "string",
          "description": "The unique identifier of the shipping method."
        },
        "name": {
          "type": "string",
          "description": "The name of the shipping method."
        },
        "cost": {
          "type": "float",
          "description": "The cost of the shipping method."
        },
        "estimatedDelivery": {
          "type": "string",
          "description": "The estimated delivery time."
        }
      }
    },
    "PaymentMethod": {
      "type": "object",
      "description": "Represents a payment method.",
      "fields": {
        "paymentMethodId": {
          "type": "string",
          "description": "The unique identifier of the payment method."
        },
        "name": {
          "type": "string",
          "description": "The name of the payment method."
        },
        "details": {
          "type": "object",
          "description": "The details of the payment method.",
          "fields": {
            "cardNumber": {
              "type": "string",
              "description": "The card number."
            },
            "expirationDate": {
              "type": "string",
              "description": "The expiration date of the card."
            }
          }
        }
      }
    },
    "TaxRate": {
      "type": "object",
      "description": "Represents a tax rate.",
      "fields": {
        "taxRateId": {
          "type": "string",
          "description": "The unique identifier of the tax rate."
        },
        "name": {
          "type": "string",
          "description": "The name of the tax rate."
        },
        "rate": {
          "type": "float",
          "description": "The tax rate percentage."
        }
      }
    },
    "Currency": {
      "type": "object",
      "description": "Represents a currency.",
      "fields": {
        "currencyId": {
          "type": "string",
          "description": "The unique identifier of the currency."
        },
        "code": {
          "type": "string",
          "description": "The currency code."
        },
        "name": {
          "type": "string",
          "description": "The name of the currency."
        },
        "symbol": {
          "type": "string",
          "description": "The symbol of the currency."
        }
      }
    },
    "Language": {
      "type": "object",
      "description": "Represents a language.",
      "fields": {
        "languageId": {
          "type": "string",
          "description": "The unique identifier of the language."
        },
        "code": {
          "type": "string",
          "description": "The language code."
        },
        "name": {
          "type": "string",
          "description": "The name of the language."
        }
      }
    },
    "TimeZone": {
      "type": "object",
      "description": "Represents a time zone.",
      "fields": {
        "timeZoneId": {
          "type": "string",
          "description": "The unique identifier of the time zone."
        },
        "name": {
          "type": "string",
          "description": "The name of the time zone."
        },
        "offset": {
          "type": "string",
          "description": "The offset from UTC."
        }
      }
    },
    "Country": {
      "type": "object",
      "description": "Represents a country.",
      "fields": {
        "countryId": {
          "type": "string",
          "description": "The unique identifier of the country."
        },
        "code": {
          "type": "string",
          "description": "The country code."
        },
        "name": {
          "type": "string",
          "description": "The name of the country."
        }
      }
    },
    "State": {
      "type": "object",
      "description": "Represents a state.",
      "fields": {
        "stateId": {
          "type": "string",
          "description": "The unique identifier of the state."
        },
        "countryId": {
          "type": "string",
          "description": "The country ID associated with the state."
        },
        "code": {
          "type": "string",
          "description": "The state code."
        },
        "name": {
          "type": "string",
          "description": "The name of the state."
        }
      }
    },
    "City": {
      "type": "object",
      "description": "Represents a city.",
      "fields": {
        "cityId": {
          "type": "string",
          "description": "The unique identifier of the city."
        },
        "stateId": {
          "type": "string",
          "description": "The state ID associated with the city."
        },
        "name": {
          "type": "string",
          "description": "The name of the city."
        }
      }
    },
    "AddressType": {
      "type": "object",
      "description": "Represents an address type.",
      "fields": {
        "addressTypeId": {
          "type": "string",
          "description": "The unique identifier of the address type."
        },
        "name": {
          "type": "string",
          "description": "The name of the address type."
        }
      }
    },
    "Contact": {
      "type": "object",
      "description": "Represents a contact.",
      "fields": {
        "contactId": {
          "type": "string",
          "description": "The unique identifier of the contact."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the contact."
        },
        "name": {
          "type": "string",
          "description": "The name of the contact."
        },
        "email": {
          "type": "string",
          "description": "The email of the contact."
        },
        "phone": {
          "type": "string",
          "description": "The phone number of the contact."
        }
      }
    },
    "ContactGroup": {
      "type": "object",
      "description": "Represents a contact group.",
      "fields": {
        "contactGroupId": {
          "type": "string",
          "description": "The unique identifier of the contact group."
        },
        "name": {
          "type": "string",
          "description": "The name of the contact group."
        },
        "members": {
          "type": "array",
          "description": "The list of members in the contact group.",
          "arrayType": {
            "type": "Contact"
          }
        }
      }
    },
    "ContactType": {
      "type": "object",
      "description": "Represents a contact type.",
      "fields": {
        "contactTypeId": {
          "type": "string",
          "description": "The unique identifier of the contact type."
        },
        "name": {
          "type": "string",
          "description": "The name of the contact type."
        }
      }
    },
    "Communication": {
      "type": "object",
      "description": "Represents a communication.",
      "fields": {
        "communicationId": {
          "type": "string",
          "description": "The unique identifier of the communication."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the communication."
        },
        "type": {
          "type": "string",
          "description": "The type of the communication (e.g., email, SMS)."
        },
        "content": {
          "type": "string",
          "description": "The content of the communication."
        },
        "timestamp": {
          "type": "string",
          "description": "The date and time the communication was sent."
        }
      }
    },
    "CommunicationTemplate": {
      "type": "object",
      "description": "Represents a communication template.",
      "fields": {
        "templateId": {
          "type": "string",
          "description": "The unique identifier of the communication template."
        },
        "name": {
          "type": "string",
          "description": "The name of the communication template."
        },
        "content": {
          "type": "string",
          "description": "The content of the communication template."
        }
      }
    },
    "CommunicationChannel": {
      "type": "object",
      "description": "Represents a communication channel.",
      "fields": {
        "channelId": {
          "type": "string",
          "description": "The unique identifier of the communication channel."
        },
        "name": {
          "type": "string",
          "description": "The name of the communication channel."
        },
        "type": {
          "type": "string",
          "description": "The type of the communication channel (e.g., email, SMS)."
        }
      }
    },
    "CommunicationLog": {
      "type": "object",
      "description": "Represents a communication log.",
      "fields": {
        "logId": {
          "type": "string",
          "description": "The unique identifier of the communication log."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the communication log."
        },
        "message": {
          "type": "string",
          "description": "The log message."
        },
        "timestamp": {
          "type": "string",
          "description": "The date and time the communication log was created."
        }
      }
    },
    "CommunicationSettings": {
      "type": "object",
      "description": "Represents communication settings.",
      "fields": {
        "settingsId": {
          "type": "string",
          "description": "The unique identifier of the communication settings."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the communication settings."
        },
        "preferences": {
          "type": "object",
          "description": "The communication preferences.",
          "fields": {
            "emailNotifications": {
              "type": "boolean",
              "description": "Whether the user wants to receive email notifications."
            },
            "smsNotifications": {
              "type": "boolean",
              "description": "Whether the user wants to receive SMS notifications."
            }
          }
        }
      }
    },
    "CommunicationPreferences": {
      "type": "object",
      "description": "Represents communication preferences.",
      "fields": {
        "preferencesId": {
          "type": "string",
          "description": "The unique identifier of the communication preferences."
        },
        "userId": {
          "type": "string",
          "description": "The user ID associated with the communication preferences."
        },
        "email": {
          "type": "boolean",
          "description": "Whether the user wants to receive email notifications."
        },
        "sms": {
          "type": "boolean",
          "description": "Whether the user wants to receive SMS notifications."
        }
      }
    }
  },
  "procedures": {
    "DummyProcedure": {
      "description": "This is a dummy procedure",
      "input": {
        "type": "string"
      },
      "output": {
        "type": "boolean"
      }
    },
    "CreateUser": {
      "description": "Creates a new user.",
      "input": {
        "type": "object",
        "fields": {
          "user": {
            "type": "User",
            "description": "The user details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "userId": {
            "type": "string",
            "description": "The new user's unique identifier."
          }
        }
      }
    },
    "GetUser": {
      "description": "Retrieves user information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "userId": {
            "type": "string",
            "description": "The user's unique identifier."
          }
        }
      },
      "output": {
        "type": "User",
        "description": "The user details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListUsers": {
      "description": "List all users.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of users to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of users to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "users": {
            "type": "array",
            "description": "List of users.",
            "arrayType": {
              "type": "User"
            }
          }
        }
      }
    },
    "LastUser": {
      "description": "Get the last user.",
      "output": {
        "type": "object",
        "fields": {
          "user": {
            "type": "User",
            "description": "The last user."
          }
        }
      }
    },
    "CreateProduct": {
      "description": "Creates a new product.",
      "input": {
        "type": "object",
        "fields": {
          "product": {
            "type": "Product",
            "description": "The product details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "productId": {
            "type": "string",
            "description": "The new product's unique identifier."
          }
        }
      }
    },
    "GetProduct": {
      "description": "Retrieves product information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "productId": {
            "type": "string",
            "description": "The product's unique identifier."
          }
        }
      },
      "output": {
        "type": "Product",
        "description": "The product details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListProducts": {
      "description": "List all products.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of products to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of products to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "products": {
            "type": "array",
            "description": "List of products.",
            "arrayType": {
              "type": "Product"
            }
          }
        }
      }
    },
    "UpdateProduct": {
      "description": "Updates an existing product.",
      "input": {
        "type": "object",
        "fields": {
          "productId": {
            "type": "string",
            "description": "The product's unique identifier."
          },
          "product": {
            "type": "Product",
            "description": "The updated product details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "productId": {
            "type": "string",
            "description": "The updated product's unique identifier."
          }
        }
      }
    },
    "DeleteProduct": {
      "description": "Deletes a product by ID.",
      "input": {
        "type": "object",
        "fields": {
          "productId": {
            "type": "string",
            "description": "The product's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the product was successfully deleted."
      }
    },
    "CreateOrder": {
      "description": "Creates a new order.",
      "input": {
        "type": "object",
        "fields": {
          "order": {
            "type": "Order",
            "description": "The order details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "orderId": {
            "type": "string",
            "description": "The new order's unique identifier."
          }
        }
      }
    },
    "GetOrder": {
      "description": "Retrieves order information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "orderId": {
            "type": "string",
            "description": "The order's unique identifier."
          }
        }
      },
      "output": {
        "type": "Order",
        "description": "The order details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListOrders": {
      "description": "List all orders.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of orders to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of orders to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "orders": {
            "type": "array",
            "description": "List of orders.",
            "arrayType": {
              "type": "Order"
            }
          }
        }
      }
    },
    "UpdateOrder": {
      "description": "Updates an existing order.",
      "input": {
        "type": "object",
        "fields": {
          "orderId": {
            "type": "string",
            "description": "The order's unique identifier."
          },
          "order": {
            "type": "Order",
            "description": "The updated order details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "orderId": {
            "type": "string",
            "description": "The updated order's unique identifier."
          }
        }
      }
    },
    "DeleteOrder": {
      "description": "Deletes an order by ID.",
      "input": {
        "type": "object",
        "fields": {
          "orderId": {
            "type": "string",
            "description": "The order's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the order was successfully deleted."
      }
    },
    "CreateAddress": {
      "description": "Creates a new address.",
      "input": {
        "type": "object",
        "fields": {
          "address": {
            "type": "Address",
            "description": "The address details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "addressId": {
            "type": "string",
            "description": "The new address's unique identifier."
          }
        }
      }
    },
    "GetAddress": {
      "description": "Retrieves address information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "addressId": {
            "type": "string",
            "description": "The address's unique identifier."
          }
        }
      },
      "output": {
        "type": "Address",
        "description": "The address details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListAddresses": {
      "description": "List all addresses.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of addresses to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of addresses to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "addresses": {
            "type": "array",
            "description": "List of addresses.",
            "arrayType": {
              "type": "Address"
            }
          }
        }
      }
    },
    "UpdateAddress": {
      "description": "Updates an existing address.",
      "input": {
        "type": "object",
        "fields": {
          "addressId": {
            "type": "string",
            "description": "The address's unique identifier."
          },
          "address": {
            "type": "Address",
            "description": "The updated address details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "addressId": {
            "type": "string",
            "description": "The updated address's unique identifier."
          }
        }
      }
    },
    "DeleteAddress": {
      "description": "Deletes an address by ID.",
      "input": {
        "type": "object",
        "fields": {
          "addressId": {
            "type": "string",
            "description": "The address's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the address was successfully deleted."
      }
    },
    "CreatePayment": {
      "description": "Creates a new payment.",
      "input": {
        "type": "object",
        "fields": {
          "payment": {
            "type": "Payment",
            "description": "The payment details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "paymentId": {
            "type": "string",
            "description": "The new payment's unique identifier."
          }
        }
      }
    },
    "GetPayment": {
      "description": "Retrieves payment information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "paymentId": {
            "type": "string",
            "description": "The payment's unique identifier."
          }
        }
      },
      "output": {
        "type": "Payment",
        "description": "The payment details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListPayments": {
      "description": "List all payments.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of payments to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of payments to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "payments": {
            "type": "array",
            "description": "List of payments.",
            "arrayType": {
              "type": "Payment"
            }
          }
        }
      }
    },
    "UpdatePayment": {
      "description": "Updates an existing payment.",
      "input": {
        "type": "object",
        "fields": {
          "paymentId": {
            "type": "string",
            "description": "The payment's unique identifier."
          },
          "payment": {
            "type": "Payment",
            "description": "The updated payment details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "paymentId": {
            "type": "string",
            "description": "The updated payment's unique identifier."
          }
        }
      }
    },
    "DeletePayment": {
      "description": "Deletes a payment by ID.",
      "input": {
        "type": "object",
        "fields": {
          "paymentId": {
            "type": "string",
            "description": "The payment's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the payment was successfully deleted."
      }
    },
    "CreateReview": {
      "description": "Creates a new review.",
      "input": {
        "type": "object",
        "fields": {
          "review": {
            "type": "Review",
            "description": "The review details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "reviewId": {
            "type": "string",
            "description": "The new review's unique identifier."
          }
        }
      }
    },
    "GetReview": {
      "description": "Retrieves review information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "reviewId": {
            "type": "string",
            "description": "The review's unique identifier."
          }
        }
      },
      "output": {
        "type": "Review",
        "description": "The review details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListReviews": {
      "description": "List all reviews.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of reviews to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of reviews to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "reviews": {
            "type": "array",
            "description": "List of reviews.",
            "arrayType": {
              "type": "Review"
            }
          }
        }
      }
    },
    "UpdateReview": {
      "description": "Updates an existing review.",
      "input": {
        "type": "object",
        "fields": {
          "reviewId": {
            "type": "string",
            "description": "The review's unique identifier."
          },
          "review": {
            "type": "Review",
            "description": "The updated review details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "reviewId": {
            "type": "string",
            "description": "The updated review's unique identifier."
          }
        }
      }
    },
    "DeleteReview": {
      "description": "Deletes a review by ID.",
      "input": {
        "type": "object",
        "fields": {
          "reviewId": {
            "type": "string",
            "description": "The review's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the review was successfully deleted."
      }
    },
    "CreateCategory": {
      "description": "Creates a new category.",
      "input": {
        "type": "object",
        "fields": {
          "category": {
            "type": "Category",
            "description": "The category details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "categoryId": {
            "type": "string",
            "description": "The new category's unique identifier."
          }
        }
      }
    },
    "GetCategory": {
      "description": "Retrieves category information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "categoryId": {
            "type": "string",
            "description": "The category's unique identifier."
          }
        }
      },
      "output": {
        "type": "Category",
        "description": "The category details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListCategories": {
      "description": "List all categories.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of categories to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of categories to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "categories": {
            "type": "array",
            "description": "List of categories.",
            "arrayType": {
              "type": "Category"
            }
          }
        }
      }
    },
    "UpdateCategory": {
      "description": "Updates an existing category.",
      "input": {
        "type": "object",
        "fields": {
          "categoryId": {
            "type": "string",
            "description": "The category's unique identifier."
          },
          "category": {
            "type": "Category",
            "description": "The updated category details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "categoryId": {
            "type": "string",
            "description": "The updated category's unique identifier."
          }
        }
      }
    },
    "DeleteCategory": {
      "description": "Deletes a category by ID.",
      "input": {
        "type": "object",
        "fields": {
          "categoryId": {
            "type": "string",
            "description": "The category's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the category was successfully deleted."
      }
    },
    "CreateSubscription": {
      "description": "Creates a new subscription.",
      "input": {
        "type": "object",
        "fields": {
          "subscription": {
            "type": "Subscription",
            "description": "The subscription details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "subscriptionId": {
            "type": "string",
            "description": "The new subscription's unique identifier."
          }
        }
      }
    },
    "GetSubscription": {
      "description": "Retrieves subscription information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription's unique identifier."
          }
        }
      },
      "output": {
        "type": "Subscription",
        "description": "The subscription details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListSubscriptions": {
      "description": "List all subscriptions.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of subscriptions to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of subscriptions to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "subscriptions": {
            "type": "array",
            "description": "List of subscriptions.",
            "arrayType": {
              "type": "Subscription"
            }
          }
        }
      }
    },
    "UpdateSubscription": {
      "description": "Updates an existing subscription.",
      "input": {
        "type": "object",
        "fields": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription's unique identifier."
          },
          "subscription": {
            "type": "Subscription",
            "description": "The updated subscription details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "subscriptionId": {
            "type": "string",
            "description": "The updated subscription's unique identifier."
          }
        }
      }
    },
    "DeleteSubscription": {
      "description": "Deletes a subscription by ID.",
      "input": {
        "type": "object",
        "fields": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the subscription was successfully deleted."
      }
    },
    "CreateNotification": {
      "description": "Creates a new notification.",
      "input": {
        "type": "object",
        "fields": {
          "notification": {
            "type": "Notification",
            "description": "The notification details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "notificationId": {
            "type": "string",
            "description": "The new notification's unique identifier."
          }
        }
      }
    },
    "GetNotification": {
      "description": "Retrieves notification information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "notificationId": {
            "type": "string",
            "description": "The notification's unique identifier."
          }
        }
      },
      "output": {
        "type": "Notification",
        "description": "The notification details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListNotifications": {
      "description": "List all notifications.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of notifications to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of notifications to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "notifications": {
            "type": "array",
            "description": "List of notifications.",
            "arrayType": {
              "type": "Notification"
            }
          }
        }
      }
    },
    "UpdateNotification": {
      "description": "Updates an existing notification.",
      "input": {
        "type": "object",
        "fields": {
          "notificationId": {
            "type": "string",
            "description": "The notification's unique identifier."
          },
          "notification": {
            "type": "Notification",
            "description": "The updated notification details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "notificationId": {
            "type": "string",
            "description": "The updated notification's unique identifier."
          }
        }
      }
    },
    "DeleteNotification": {
      "description": "Deletes a notification by ID.",
      "input": {
        "type": "object",
        "fields": {
          "notificationId": {
            "type": "string",
            "description": "The notification's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the notification was successfully deleted."
      }
    },
    "CreateMessage": {
      "description": "Creates a new message.",
      "input": {
        "type": "object",
        "fields": {
          "message": {
            "type": "Message",
            "description": "The message details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "messageId": {
            "type": "string",
            "description": "The new message's unique identifier."
          }
        }
      }
    },
    "GetMessage": {
      "description": "Retrieves message information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "messageId": {
            "type": "string",
            "description": "The message's unique identifier."
          }
        }
      },
      "output": {
        "type": "Message",
        "description": "The message details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListMessages": {
      "description": "List all messages.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of messages to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of messages to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "messages": {
            "type": "array",
            "description": "List of messages.",
            "arrayType": {
              "type": "Message"
            }
          }
        }
      }
    },
    "UpdateMessage": {
      "description": "Updates an existing message.",
      "input": {
        "type": "object",
        "fields": {
          "messageId": {
            "type": "string",
            "description": "The message's unique identifier."
          },
          "message": {
            "type": "Message",
            "description": "The updated message details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "messageId": {
            "type": "string",
            "description": "The updated message's unique identifier."
          }
        }
      }
    },
    "DeleteMessage": {
      "description": "Deletes a message by ID.",
      "input": {
        "type": "object",
        "fields": {
          "messageId": {
            "type": "string",
            "description": "The message's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the message was successfully deleted."
      }
    },
    "CreateEvent": {
      "description": "Creates a new event.",
      "input": {
        "type": "object",
        "fields": {
          "event": {
            "type": "Event",
            "description": "The event details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "eventId": {
            "type": "string",
            "description": "The new event's unique identifier."
          }
        }
      }
    },
    "GetEvent": {
      "description": "Retrieves event information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "eventId": {
            "type": "string",
            "description": "The event's unique identifier."
          }
        }
      },
      "output": {
        "type": "Event",
        "description": "The event details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListEvents": {
      "description": "List all events.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of events to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of events to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "events": {
            "type": "array",
            "description": "List of events.",
            "arrayType": {
              "type": "Event"
            }
          }
        }
      }
    },
    "UpdateEvent": {
      "description": "Updates an existing event.",
      "input": {
        "type": "object",
        "fields": {
          "eventId": {
            "type": "string",
            "description": "The event's unique identifier."
          },
          "event": {
            "type": "Event",
            "description": "The updated event details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "eventId": {
            "type": "string",
            "description": "The updated event's unique identifier."
          }
        }
      }
    },
    "DeleteEvent": {
      "description": "Deletes an event by ID.",
      "input": {
        "type": "object",
        "fields": {
          "eventId": {
            "type": "string",
            "description": "The event's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the event was successfully deleted."
      }
    },
    "CreateTask": {
      "description": "Creates a new task.",
      "input": {
        "type": "object",
        "fields": {
          "task": {
            "type": "Task",
            "description": "The task details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "taskId": {
            "type": "string",
            "description": "The new task's unique identifier."
          }
        }
      }
    },
    "GetTask": {
      "description": "Retrieves task information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "taskId": {
            "type": "string",
            "description": "The task's unique identifier."
          }
        }
      },
      "output": {
        "type": "Task",
        "description": "The task details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListTasks": {
      "description": "List all tasks.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of tasks to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of tasks to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "tasks": {
            "type": "array",
            "description": "List of tasks.",
            "arrayType": {
              "type": "Task"
            }
          }
        }
      }
    },
    "UpdateTask": {
      "description": "Updates an existing task.",
      "input": {
        "type": "object",
        "fields": {
          "taskId": {
            "type": "string",
            "description": "The task's unique identifier."
          },
          "task": {
            "type": "Task",
            "description": "The updated task details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "taskId": {
            "type": "string",
            "description": "The updated task's unique identifier."
          }
        }
      }
    },
    "DeleteTask": {
      "description": "Deletes a task by ID.",
      "input": {
        "type": "object",
        "fields": {
          "taskId": {
            "type": "string",
            "description": "The task's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the task was successfully deleted."
      }
    },
    "CreateProject": {
      "description": "Creates a new project.",
      "input": {
        "type": "object",
        "fields": {
          "project": {
            "type": "Project",
            "description": "The project details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "projectId": {
            "type": "string",
            "description": "The new project's unique identifier."
          }
        }
      }
    },
    "GetProject": {
      "description": "Retrieves project information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "projectId": {
            "type": "string",
            "description": "The project's unique identifier."
          }
        }
      },
      "output": {
        "type": "Project",
        "description": "The project details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListProjects": {
      "description": "List all projects.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of projects to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of projects to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "projects": {
            "type": "array",
            "description": "List of projects.",
            "arrayType": {
              "type": "Project"
            }
          }
        }
      }
    },
    "UpdateProject": {
      "description": "Updates an existing project.",
      "input": {
        "type": "object",
        "fields": {
          "projectId": {
            "type": "string",
            "description": "The project's unique identifier."
          },
          "project": {
            "type": "Project",
            "description": "The updated project details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "projectId": {
            "type": "string",
            "description": "The updated project's unique identifier."
          }
        }
      }
    },
    "DeleteProject": {
      "description": "Deletes a project by ID.",
      "input": {
        "type": "object",
        "fields": {
          "projectId": {
            "type": "string",
            "description": "The project's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the project was successfully deleted."
      }
    },
    "CreateInvoice": {
      "description": "Creates a new invoice.",
      "input": {
        "type": "object",
        "fields": {
          "invoice": {
            "type": "Invoice",
            "description": "The invoice details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "invoiceId": {
            "type": "string",
            "description": "The new invoice's unique identifier."
          }
        }
      }
    },
    "GetInvoice": {
      "description": "Retrieves invoice information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "invoiceId": {
            "type": "string",
            "description": "The invoice's unique identifier."
          }
        }
      },
      "output": {
        "type": "Invoice",
        "description": "The invoice details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListInvoices": {
      "description": "List all invoices.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of invoices to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of invoices to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "invoices": {
            "type": "array",
            "description": "List of invoices.",
            "arrayType": {
              "type": "Invoice"
            }
          }
        }
      }
    },
    "UpdateInvoice": {
      "description": "Updates an existing invoice.",
      "input": {
        "type": "object",
        "fields": {
          "invoiceId": {
            "type": "string",
            "description": "The invoice's unique identifier."
          },
          "invoice": {
            "type": "Invoice",
            "description": "The updated invoice details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "invoiceId": {
            "type": "string",
            "description": "The updated invoice's unique identifier."
          }
        }
      }
    },
    "DeleteInvoice": {
      "description": "Deletes an invoice by ID.",
      "input": {
        "type": "object",
        "fields": {
          "invoiceId": {
            "type": "string",
            "description": "The invoice's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the invoice was successfully deleted."
      }
    },
    "CreateCoupon": {
      "description": "Creates a new coupon.",
      "input": {
        "type": "object",
        "fields": {
          "coupon": {
            "type": "Coupon",
            "description": "The coupon details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "couponId": {
            "type": "string",
            "description": "The new coupon's unique identifier."
          }
        }
      }
    },
    "GetCoupon": {
      "description": "Retrieves coupon information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "couponId": {
            "type": "string",
            "description": "The coupon's unique identifier."
          }
        }
      },
      "output": {
        "type": "Coupon",
        "description": "The coupon details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListCoupons": {
      "description": "List all coupons.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of coupons to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of coupons to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "coupons": {
            "type": "array",
            "description": "List of coupons.",
            "arrayType": {
              "type": "Coupon"
            }
          }
        }
      }
    },
    "UpdateCoupon": {
      "description": "Updates an existing coupon.",
      "input": {
        "type": "object",
        "fields": {
          "couponId": {
            "type": "string",
            "description": "The coupon's unique identifier."
          },
          "coupon": {
            "type": "Coupon",
            "description": "The updated coupon details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "couponId": {
            "type": "string",
            "description": "The updated coupon's unique identifier."
          }
        }
      }
    },
    "DeleteCoupon": {
      "description": "Deletes a coupon by ID.",
      "input": {
        "type": "object",
        "fields": {
          "couponId": {
            "type": "string",
            "description": "The coupon's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the coupon was successfully deleted."
      }
    },
    "CreateShipment": {
      "description": "Creates a new shipment.",
      "input": {
        "type": "object",
        "fields": {
          "shipment": {
            "type": "Shipment",
            "description": "The shipment details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "shipmentId": {
            "type": "string",
            "description": "The new shipment's unique identifier."
          }
        }
      }
    },
    "GetShipment": {
      "description": "Retrieves shipment information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "shipmentId": {
            "type": "string",
            "description": "The shipment's unique identifier."
          }
        }
      },
      "output": {
        "type": "Shipment",
        "description": "The shipment details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListShipments": {
      "description": "List all shipments.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of shipments to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of shipments to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "shipments": {
            "type": "array",
            "description": "List of shipments.",
            "arrayType": {
              "type": "Shipment"
            }
          }
        }
      }
    },
    "UpdateShipment": {
      "description": "Updates an existing shipment.",
      "input": {
        "type": "object",
        "fields": {
          "shipmentId": {
            "type": "string",
            "description": "The shipment's unique identifier."
          },
          "shipment": {
            "type": "Shipment",
            "description": "The updated shipment details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "shipmentId": {
            "type": "string",
            "description": "The updated shipment's unique identifier."
          }
        }
      }
    },
    "DeleteShipment": {
      "description": "Deletes a shipment by ID.",
      "input": {
        "type": "object",
        "fields": {
          "shipmentId": {
            "type": "string",
            "description": "The shipment's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the shipment was successfully deleted."
      }
    },
    "CreateCart": {
      "description": "Creates a new cart.",
      "input": {
        "type": "object",
        "fields": {
          "cart": {
            "type": "Cart",
            "description": "The cart details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "cartId": {
            "type": "string",
            "description": "The new cart's unique identifier."
          }
        }
      }
    },
    "GetCart": {
      "description": "Retrieves cart information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "cartId": {
            "type": "string",
            "description": "The cart's unique identifier."
          }
        }
      },
      "output": {
        "type": "Cart",
        "description": "The cart details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListCarts": {
      "description": "List all carts.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of carts to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of carts to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "carts": {
            "type": "array",
            "description": "List of carts.",
            "arrayType": {
              "type": "Cart"
            }
          }
        }
      }
    },
    "UpdateCart": {
      "description": "Updates an existing cart.",
      "input": {
        "type": "object",
        "fields": {
          "cartId": {
            "type": "string",
            "description": "The cart's unique identifier."
          },
          "cart": {
            "type": "Cart",
            "description": "The updated cart details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "cartId": {
            "type": "string",
            "description": "The updated cart's unique identifier."
          }
        }
      }
    },
    "DeleteCart": {
      "description": "Deletes a cart by ID.",
      "input": {
        "type": "object",
        "fields": {
          "cartId": {
            "type": "string",
            "description": "The cart's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the cart was successfully deleted."
      }
    },
    "CreateWishlist": {
      "description": "Creates a new wishlist.",
      "input": {
        "type": "object",
        "fields": {
          "wishlist": {
            "type": "Wishlist",
            "description": "The wishlist details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "wishlistId": {
            "type": "string",
            "description": "The new wishlist's unique identifier."
          }
        }
      }
    },
    "GetWishlist": {
      "description": "Retrieves wishlist information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "wishlistId": {
            "type": "string",
            "description": "The wishlist's unique identifier."
          }
        }
      },
      "output": {
        "type": "Wishlist",
        "description": "The wishlist details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListWishlists": {
      "description": "List all wishlists.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of wishlists to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of wishlists to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "wishlists": {
            "type": "array",
            "description": "List of wishlists.",
            "arrayType": {
              "type": "Wishlist"
            }
          }
        }
      }
    },
    "UpdateWishlist": {
      "description": "Updates an existing wishlist.",
      "input": {
        "type": "object",
        "fields": {
          "wishlistId": {
            "type": "string",
            "description": "The wishlist's unique identifier."
          },
          "wishlist": {
            "type": "Wishlist",
            "description": "The updated wishlist details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "wishlistId": {
            "type": "string",
            "description": "The updated wishlist's unique identifier."
          }
        }
      }
    },
    "DeleteWishlist": {
      "description": "Deletes a wishlist by ID.",
      "input": {
        "type": "object",
        "fields": {
          "wishlistId": {
            "type": "string",
            "description": "The wishlist's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the wishlist was successfully deleted."
      }
    },
    "CreatePromotion": {
      "description": "Creates a new promotion.",
      "input": {
        "type": "object",
        "fields": {
          "promotion": {
            "type": "Promotion",
            "description": "The promotion details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "promotionId": {
            "type": "string",
            "description": "The new promotion's unique identifier."
          }
        }
      }
    },
    "GetPromotion": {
      "description": "Retrieves promotion information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "promotionId": {
            "type": "string",
            "description": "The promotion's unique identifier."
          }
        }
      },
      "output": {
        "type": "Promotion",
        "description": "The promotion details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListPromotions": {
      "description": "List all promotions.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of promotions to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of promotions to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "promotions": {
            "type": "array",
            "description": "List of promotions.",
            "arrayType": {
              "type": "Promotion"
            }
          }
        }
      }
    },
    "UpdatePromotion": {
      "description": "Updates an existing promotion.",
      "input": {
        "type": "object",
        "fields": {
          "promotionId": {
            "type": "string",
            "description": "The promotion's unique identifier."
          },
          "promotion": {
            "type": "Promotion",
            "description": "The updated promotion details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "promotionId": {
            "type": "string",
            "description": "The updated promotion's unique identifier."
          }
        }
      }
    },
    "DeletePromotion": {
      "description": "Deletes a promotion by ID.",
      "input": {
        "type": "object",
        "fields": {
          "promotionId": {
            "type": "string",
            "description": "The promotion's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the promotion was successfully deleted."
      }
    },
    "CreateFeedback": {
      "description": "Creates a new feedback.",
      "input": {
        "type": "object",
        "fields": {
          "feedback": {
            "type": "Feedback",
            "description": "The feedback details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "feedbackId": {
            "type": "string",
            "description": "The new feedback's unique identifier."
          }
        }
      }
    },
    "GetFeedback": {
      "description": "Retrieves feedback information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "feedbackId": {
            "type": "string",
            "description": "The feedback's unique identifier."
          }
        }
      },
      "output": {
        "type": "Feedback",
        "description": "The feedback details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListFeedbacks": {
      "description": "List all feedbacks.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of feedbacks to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of feedbacks to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "feedbacks": {
            "type": "array",
            "description": "List of feedbacks.",
            "arrayType": {
              "type": "Feedback"
            }
          }
        }
      }
    },
    "UpdateFeedback": {
      "description": "Updates an existing feedback.",
      "input": {
        "type": "object",
        "fields": {
          "feedbackId": {
            "type": "string",
            "description": "The feedback's unique identifier."
          },
          "feedback": {
            "type": "Feedback",
            "description": "The updated feedback details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "feedbackId": {
            "type": "string",
            "description": "The updated feedback's unique identifier."
          }
        }
      }
    },
    "DeleteFeedback": {
      "description": "Deletes a feedback by ID.",
      "input": {
        "type": "object",
        "fields": {
          "feedbackId": {
            "type": "string",
            "description": "The feedback's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the feedback was successfully deleted."
      }
    },
    "CreateTicket": {
      "description": "Creates a new ticket.",
      "input": {
        "type": "object",
        "fields": {
          "ticket": {
            "type": "Ticket",
            "description": "The ticket details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "ticketId": {
            "type": "string",
            "description": "The new ticket's unique identifier."
          }
        }
      }
    },
    "GetTicket": {
      "description": "Retrieves ticket information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "ticketId": {
            "type": "string",
            "description": "The ticket's unique identifier."
          }
        }
      },
      "output": {
        "type": "Ticket",
        "description": "The ticket details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListTickets": {
      "description": "List all tickets.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of tickets to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of tickets to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "tickets": {
            "type": "array",
            "description": "List of tickets.",
            "arrayType": {
              "type": "Ticket"
            }
          }
        }
      }
    },
    "UpdateTicket": {
      "description": "Updates an existing ticket.",
      "input": {
        "type": "object",
        "fields": {
          "ticketId": {
            "type": "string",
            "description": "The ticket's unique identifier."
          },
          "ticket": {
            "type": "Ticket",
            "description": "The updated ticket details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "ticketId": {
            "type": "string",
            "description": "The updated ticket's unique identifier."
          }
        }
      }
    },
    "DeleteTicket": {
      "description": "Deletes a ticket by ID.",
      "input": {
        "type": "object",
        "fields": {
          "ticketId": {
            "type": "string",
            "description": "The ticket's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the ticket was successfully deleted."
      }
    },
    "CreateComment": {
      "description": "Creates a new comment.",
      "input": {
        "type": "object",
        "fields": {
          "comment": {
            "type": "Comment",
            "description": "The comment details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "commentId": {
            "type": "string",
            "description": "The new comment's unique identifier."
          }
        }
      }
    },
    "GetComment": {
      "description": "Retrieves comment information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "commentId": {
            "type": "string",
            "description": "The comment's unique identifier."
          }
        }
      },
      "output": {
        "type": "Comment",
        "description": "The comment details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListComments": {
      "description": "List all comments.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of comments to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of comments to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "comments": {
            "type": "array",
            "description": "List of comments.",
            "arrayType": {
              "type": "Comment"
            }
          }
        }
      }
    },
    "UpdateComment": {
      "description": "Updates an existing comment.",
      "input": {
        "type": "object",
        "fields": {
          "commentId": {
            "type": "string",
            "description": "The comment's unique identifier."
          },
          "comment": {
            "type": "Comment",
            "description": "The updated comment details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "commentId": {
            "type": "string",
            "description": "The updated comment's unique identifier."
          }
        }
      }
    },
    "DeleteComment": {
      "description": "Deletes a comment by ID.",
      "input": {
        "type": "object",
        "fields": {
          "commentId": {
            "type": "string",
            "description": "The comment's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the comment was successfully deleted."
      }
    },
    "CreatePost": {
      "description": "Creates a new post.",
      "input": {
        "type": "object",
        "fields": {
          "post": {
            "type": "Post",
            "description": "The post details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "postId": {
            "type": "string",
            "description": "The new post's unique identifier."
          }
        }
      }
    },
    "GetPost": {
      "description": "Retrieves post information by ID.",
      "input": {
        "type": "object",
        "fields": {
          "postId": {
            "type": "string",
            "description": "The post's unique identifier."
          }
        }
      },
      "output": {
        "type": "Post",
        "description": "The post details.",
        "optional": true,
        "rules": {
        }
      }
    },
    "ListPosts": {
      "description": "List all posts.",
      "input": {
        "type": "object",
        "fields": {
          "limit": {
            "type": "int",
            "description": "The number of posts to return."
          },
          "offset": {
            "type": "int",
            "description": "The number of posts to skip."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "posts": {
            "type": "array",
            "description": "List of posts.",
            "arrayType": {
              "type": "Post"
            }
          }
        }
      }
    },
    "UpdatePost": {
      "description": "Updates an existing post.",
      "input": {
        "type": "object",
        "fields": {
          "postId": {
            "type": "string",
            "description": "The post's unique identifier."
          },
          "post": {
            "type": "Post",
            "description": "The updated post details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "postId": {
            "type": "string",
            "description": "The updated post's unique identifier."
          }
        }
      }
    },
    "DeletePost": {
      "description": "Deletes a post by ID.",
      "input": {
        "type": "object",
        "fields": {
          "postId": {
            "type": "string",
            "description": "The post's unique identifier."
          }
        }
      },
      "output": {
        "type": "boolean",
        "description": "Whether the post was successfully deleted."
      }
    },
    "CreateProfile": {
      "description": "Creates a new profile.",
      "input": {
        "type": "object",
        "fields": {
          "profile": {
            "type": "Profile",
            "description": "The profile details."
          }
        }
      },
      "output": {
        "type": "object",
        "fields": {
          "profileId": {
            "type": "string",
            "description": "The new profile's unique identifier."
          }
        }
      }
    }
  }
}
