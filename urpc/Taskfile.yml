# https://taskfile.dev

# To create a complete build including the embedded playground, execute
# the build command from the repository root directory which will call
# all the project builds in the required order.
#
# Use the following commands when developing the URPC or WASM binary.

version: "3"

tasks:
  install:
    desc: Build and install the urpc binary in the local PATH for testing
    cmd: go install ./cmd/urpc/.

  build:wasm:
    desc: Build the WebAssembly binary for the Playground
    cmds:
      - GOOS=js GOARCH=wasm go build -o ./dist/urpc.wasm ./cmd/urpcwasm/.
      - cp "/usr/local/go/lib/wasm/wasm_exec.js" ./dist/wasm_exec.js

  build:urpc:
    desc: Build the urpc binary
    cmds:
      # LINUX builds
      - GOOS=linux GOARCH=amd64 go build -o ./dist/urpc-linux-amd64 ./cmd/urpc/.
      - GOOS=linux GOARCH=arm64 go build -o ./dist/urpc-linux-arm64 ./cmd/urpc/.

      # WINDOWS builds
      - GOOS=windows GOARCH=amd64 go build -o ./dist/urpc-windows-amd64.exe ./cmd/urpc/.
      - GOOS=windows GOARCH=arm64 go build -o ./dist/urpc-windows-arm64.exe ./cmd/urpc/.

      # DARWIN (macOS) builds
      - GOOS=darwin GOARCH=amd64 go build -o ./dist/urpc-darwin-amd64 ./cmd/urpc/.
      - GOOS=darwin GOARCH=arm64 go build -o ./dist/urpc-darwin-arm64 ./cmd/urpc/.

  test:
    desc: Run tests
    cmd: go test ./...

  lint:
    desc: Run linter
    cmd: golangci-lint run ./...

  fmt:
    desc: Run code formatter
    cmd: go fmt ./...
