# https://taskfile.dev

version: "3"

tasks:
  install:
    desc: Install the urpc binary in the local PATH
    cmd: go install ./cmd/urpc/.

  build:
    desc: Build and install the urpc binary in the PATH
    cmds:
      # Build wasm version (required by the urpc non-wasm binary)
      - GOOS=js GOARCH=wasm go build -o ./dist/urpc.wasm ./cmd/urpcwasm/.
      - cp "/usr/local/go/lib/wasm/wasm_exec.js" ./dist/wasm_exec.js

      # Build playground
      - cd ./playground && npm run build && cd ..

      # Build and install as local binary
      - go install ./cmd/urpc/.

  build:all:
    desc: Same as build, but builds for all platforms in dist/
    deps:
      - build
    cmds:
      # LINUX builds
      - GOOS=linux GOARCH=amd64 go build -o ./dist/urpc-linux-amd64 ./cmd/urpc/.
      - GOOS=linux GOARCH=arm64 go build -o ./dist/urpc-linux-arm64 ./cmd/urpc/.

      # WINDOWS builds
      - GOOS=windows GOARCH=amd64 go build -o ./dist/urpc-windows-amd64.exe ./cmd/urpc/.
      - GOOS=windows GOARCH=arm64 go build -o ./dist/urpc-windows-arm64.exe ./cmd/urpc/.

      # DARWIN (macOS) builds
      - GOOS=darwin GOARCH=amd64 go build -o ./dist/urpc-darwin-amd64 ./cmd/urpc/.
      - GOOS=darwin GOARCH=arm64 go build -o ./dist/urpc-darwin-arm64 ./cmd/urpc/.

  test:
    desc: Test all code on this repo
    cmds:
      - go test ./...
      - cd ./playground && npm install && npm run test

  lint:
    desc: Lint all code on this repo
    cmd: golangci-lint run ./...

  fmt:
    desc: Format all code on this repo
    cmds:
      - go fmt ./...
      - npm run format
