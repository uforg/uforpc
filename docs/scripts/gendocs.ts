import fg from "fast-glob";
import fse from "fs-extra";
import matter from "gray-matter";

/**
 * Base directory where the documents are stored, must be relative to the root directory.
 */
const baseDirectory = "./src/docs";

/**
 * List of file extensions to consider as documents.
 */
const extensions = [".md", ".svx"];

/**
 * Output file path where the generated document paths will be saved.
 */
const outputFile = "./src/lib/docs.gen.ts";

interface DocInfo {
  absolute: string;
  relative: string;
  slug: string;
  meta: {
    [key: string]: any;
  };
}

/**
 * Generates a URL-friendly slug from a given file path.
 *
 * @param path - The file path to convert into a slug
 * @returns A URL-friendly slug derived from the file path
 */
function getSlugFromPath(path: string): string {
  let slug = path.replace(/\\/g, "/");
  slug = slug.replaceAll(/ /g, "-");
  slug = slug.replaceAll(/--+/g, "-");

  for (const ext of extensions) {
    if (slug.endsWith(ext)) {
      slug = slug.slice(0, -ext.length);
    }
  }

  slug = slug.replaceAll(/[^a-zA-Z0-9-_/]/g, "");
  return slug;
}

/**
 * Recursively retrieves all document paths with specified extensions from the base directory.
 *
 * @returns Array of document paths relative to the root directory
 */
function getDocsInfo(): DocInfo[] {
  let paths: string[] = [];

  for (const ext of extensions) {
    const files = fg.sync(`**/*${ext}`, { cwd: baseDirectory });
    paths.push(...files);
  }

  const docPaths: DocInfo[] = paths.map((path) => {
    const absolute = `${baseDirectory}/${path}`;
    const relative = `./${path}`;
    const slug = getSlugFromPath(path);

    const fileContent = fse.readFileSync(absolute, "utf-8");
    const { data } = matter(fileContent);

    return { absolute, relative, slug, meta: data || {} };
  });

  return docPaths;
}

function main() {
  const docPaths = getDocsInfo();

  const jsonData = JSON.stringify(docPaths, null, 2);

  let fileContent = "// This file is auto-generated by scripts/gendocs.ts\n";
  fileContent += "// Do not edit this file manually.\n\n";
  fileContent += "export type DocInfo = typeof docsInfo[number];\n\n";
  fileContent += `export const docsInfo = ${jsonData};\n`;

  fse.outputFile(outputFile, fileContent);
}

main();
